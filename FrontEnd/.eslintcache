[{"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\index.js":"1","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\reportWebVitals.js":"2","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\App.js":"3","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Home.js":"4","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Nav.js":"5","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\ViewRecord.js":"6","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Monitor.js":"7","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\ModelApp.js":"8","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\utilities.js":"9","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\checkForCigaretteLabel.js":"10","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Hero.js":"11"},{"size":517,"mtime":1681982551014,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1681982551014,"results":"14","hashOfConfig":"13"},{"size":688,"mtime":1681995473291,"results":"15","hashOfConfig":"13"},{"size":685,"mtime":1685139879792,"results":"16","hashOfConfig":"13"},{"size":921,"mtime":1685107490404,"results":"17","hashOfConfig":"13"},{"size":5008,"mtime":1685137270947,"results":"18","hashOfConfig":"13"},{"size":143,"mtime":1685092430174,"results":"19","hashOfConfig":"13"},{"size":5951,"mtime":1685140088774,"results":"20","hashOfConfig":"13"},{"size":1006,"mtime":1685088937924,"results":"21","hashOfConfig":"13"},{"size":1151,"mtime":1682053225741,"results":"22","hashOfConfig":"13"},{"size":435,"mtime":1685134346347,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"961bs2",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\index.js",[],["51","52"],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\reportWebVitals.js",[],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\App.js",[],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Home.js",["53"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css'; // Import the CSS file for styling\r\nimport heroImg from \"./countryPark.jpg\";\r\nimport Hero from \"./Hero\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <section>\r\n            <Hero\r\n            cName=\"hero\"\r\n            heroImg={heroImg}\r\n            title=\"Monitor harmful system\"\r\n            text=\"This website provides server data retrieval and management functions and has a monitor module to check for hazardous materials.\"\r\n            buttonText=\"Start Model\"\r\n            url=\"/Monitor\"\r\n            btnClass=\"show\"\r\n            />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Nav.js",[],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\ViewRecord.js",["54"],"import React, { useEffect, useState } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaAngleUp } from 'react-icons/fa';\r\nimport './ViewRecord.css';\r\n\r\nconst ViewRecord = () => {\r\n    const [records, setRecords] = useState([]);\r\n    const [showTopBtn, setShowTopBtn] = useState(false);\r\n\r\n    const goToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    const handleDelete = async (recordId) => {\r\n        try {\r\n            const response = await fetch(`/deleteRecord/${recordId}`, { method: 'DELETE' });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            console.log(response);\r\n\r\n            fetchRecords();\r\n            toast.success('Record deleted successfully.');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = async (recordId) => {\r\n        try {\r\n            const newDescription = prompt('Enter new description'); // 提示用户输入新的描述\r\n            const response = await fetch(`/editRecord/${recordId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ description: newDescription }),\r\n            });\r\n            console.log(response);\r\n\r\n            fetchRecords();\r\n            toast.success('Record edited successfully.');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteAll = async () => {\r\n        try {\r\n            const response = await fetch('/deleteAll', { method: 'DELETE' });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data);\r\n\r\n                fetchRecords();\r\n                toast.success('All records deleted successfully.');\r\n            } else {\r\n                console.log('Delete all records failed.');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const fetchRecords = async () => {\r\n        try {\r\n            const response = await fetch('/getRecord');\r\n            const data = await response.json();\r\n            setRecords(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchRecords();\r\n        window.addEventListener('scroll', () => {\r\n            if (window.scrollY > 400) {\r\n                setShowTopBtn(true);\r\n            } else {\r\n                setShowTopBtn(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <section style={{ justifyContent: 'center' }}>\r\n            <div >\r\n                <div class=\"headerContainer\">\r\n                    <ToastContainer />\r\n                    <h1>Records</h1>\r\n                    <button onClick={() => handleDeleteAll()}>Delete All Record</button>\r\n                </div>\r\n                <div class=\"tableContainer\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Description</th>\r\n                                <th>DateTime</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {records.map(record => (\r\n                                <tr key={record._id}>\r\n                                    <td>\r\n                                        <img\r\n                                            src={record.Image}\r\n                                            alt=\"Record Image\"\r\n                                            style={{ width: '150px', height: '150px', cursor: 'pointer' }}\r\n                                        />\r\n                                    </td>\r\n                                    <td>{record.Description}</td>\r\n                                    <td>{new Date(record.DateTime).toLocaleString()}</td>\r\n                                    <td>\r\n                                        <button onClick={() => handleEdit(record._id)}>Edit</button>\r\n                                        <button onClick={() => handleDelete(record._id)}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"top-to-btm\">\r\n                {\" \"}\r\n                {showTopBtn && (\r\n                    <FaAngleUp\r\n                        className=\"icon-position icon-style\"\r\n                        onClick={goToTop}\r\n                    />\r\n                )}{\" \"}\r\n            </div>\r\n        </section >\r\n    );\r\n};\r\n\r\nexport default ViewRecord;\r\n","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Monitor.js",[],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\ModelApp.js",["55"],"// Import dependencies\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./model.css\";\r\n// Import drawing utility here\r\nimport { drawRect } from \"./utilities\";\r\nimport { debounce } from 'lodash';\r\n\r\nfunction ModelApp() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n\r\n    const [isSmokingDetected, setIsSmokingDetected] = useState(false);\r\n\r\n    const sendImageDataWithCooldown = debounce(sendImageDataToServer, 1000);\r\n\r\n    // Main function\r\n    const runCoco = async () => {\r\n        // 3. TODO - Load network \r\n        const net = await tf.loadGraphModel('https://storage.googleapis.com/fyp_2022_2023/model.json')\r\n\r\n        // Loop and detect hands\r\n        setInterval(() => {\r\n            detect(net);\r\n        }, 16.7);\r\n    };\r\n\r\n    const handleSetSmokingDetected = () => {\r\n        setIsSmokingDetected(true);\r\n    \r\n        setTimeout(() => {\r\n          setIsSmokingDetected(false);\r\n        }, 1500);\r\n      };\r\n\r\n    function sendImageDataToServer(imageData) {\r\n        console.log('received');\r\n        fetch('/addRecord', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ imageData: imageData }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data); // 在控制台中顯示伺服器的回應\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const detect = async (net) => {\r\n        // Check data is available\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Set canvas height and width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n\r\n            // 4. TODO - Make Detections\r\n            const img = tf.browser.fromPixels(video)\r\n            const resized = tf.image.resizeBilinear(img, [680, 680])\r\n            const casted = resized.cast('int32')\r\n            const expanded = casted.expandDims(0)\r\n            const obj = await net.executeAsync(expanded)\r\n\r\n            const boxes = await obj[5].array()\r\n            const classes = await obj[2].array()\r\n            const scores = await obj[7].array()\r\n\r\n            // Draw mesh\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n            requestAnimationFrame(() => { drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx) });\r\n\r\n            handleDetection(boxes[0], classes[0], scores[0], 0.8);\r\n\r\n            function handleDetection(boxes, classes, scores, threshold) {\r\n                for (let i = 0; i < boxes.length; i++) {\r\n                    if (boxes[i] && classes[i] === 2 && scores[i] > threshold) {\r\n                        const canvas = canvasRef.current; // 使用 useRef 建立的參考\r\n\r\n                        const video = webcamRef.current.video;\r\n                        const ctx = canvas.getContext(\"2d\");\r\n\r\n                        ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n\r\n                        // 獲取截圖數據（以Base64編碼）\r\n                        const imageData = canvas.toDataURL('image/jpeg');\r\n\r\n                        localStorage.setItem('screenshot', imageData);\r\n                        const savedImageData = localStorage.getItem('screenshot');\r\n\r\n                        if (savedImageData) {\r\n                            sendImageDataWithCooldown(imageData);\r\n                            handleSetSmokingDetected();\r\n                            console.log('send an image');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            tf.dispose(img)\r\n            tf.dispose(resized)\r\n            tf.dispose(casted)\r\n            tf.dispose(expanded)\r\n            tf.dispose(obj)\r\n        }\r\n    };\r\n\r\n    useEffect(() => { runCoco() }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <Webcam\r\n                    ref={webcamRef}\r\n                    muted={true}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        left: 0,\r\n                        right: 0,\r\n                        textAlign: \"center\",\r\n                        zindex: 9,\r\n                        width: 640,\r\n                        height: 480,\r\n                    }}\r\n                />\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        left: 0,\r\n                        right: 0,\r\n                        textAlign: \"center\",\r\n                        zindex: 8,\r\n                        width: 640,\r\n                        height: 480,\r\n                    }}\r\n                />\r\n                {/* 香煙偵測提示 */}\r\n                {isSmokingDetected && (\r\n                    <div className=\"smoking-detected\">Cigarettes Detected！</div>\r\n                )}\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModelApp;\r\n","E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\utilities.js",[],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\checkForCigaretteLabel.js",[],["56","57"],"E:\\VTC\\UWE\\Project\\Source Code\\frontend\\src\\components\\Hero.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":111,"column":41,"nodeType":"68","endLine":115,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":126,"column":36,"nodeType":"71","endLine":126,"endColumn":38,"suggestions":"72"},{"ruleId":"58","replacedBy":"73"},{"ruleId":"60","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runCoco'. Either include it or remove the dependency array.","ArrayExpression",["77"],["75"],["76"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [runCoco]",{"range":"80","text":"81"},[4490,4492],"[runCoco]"]